name: Deploy Next.js to Render

on:
  push:
    branches:
      - develop
      - main
    paths:
      - "apps/app/**"
      - "packages/ui/**"
      - "packages/logger/**"
      - "packages/schema/**"
      - "pnpm-lock.yaml"
      - "package.json"
      - "pnpm-workspace.yaml"
      - "render.yaml"

concurrency:
  group: render-deploy-${{ github.ref }}
  cancel-in-progress: true

jobs:
  deploy:
    runs-on: ubuntu-latest
    env:
      RENDER_API_URL: https://api.render.com/v1
    steps:
      - name: Ensure jq is available
        run: |
          if ! command -v jq >/dev/null 2>&1; then
            sudo apt-get update && sudo apt-get install -y jq
          fi

      - name: Trigger Render deploy (develop)
        if: github.ref == 'refs/heads/develop'
        env:
          RENDER_API_KEY: ${{ secrets.RENDER_API_KEY }}
          SERVICE_NAME: rivr-front-dev
        run: |
          SERVICES=$(curl -fsSL -H "Authorization: Bearer ${RENDER_API_KEY}" "${RENDER_API_URL}/services?limit=100")
          SERVICE_ID=$(echo "$SERVICES" | jq -r '.[] | select(.name==env.SERVICE_NAME) | .id' | head -n1)
          if [ -z "$SERVICE_ID" ]; then
            echo "Service ${SERVICE_NAME} not found on Render." >&2
            echo "$SERVICES" | jq -r '.[].name' || true
            exit 1
          fi
          echo "Triggering deploy for service ${SERVICE_NAME} (${SERVICE_ID})"
          curl -fsSL -X POST \
            -H "Authorization: Bearer ${RENDER_API_KEY}" \
            -H "Content-Type: application/json" \
            -d '{"clearCache":true}' \
            "${RENDER_API_URL}/services/${SERVICE_ID}/deploys"

      - name: Trigger Render deploy (main)
        if: github.ref == 'refs/heads/main'
        env:
          RENDER_API_KEY: ${{ secrets.RENDER_API_KEY }}
          SERVICE_NAME: rivr-front-prod
        run: |
          SERVICES=$(curl -fsSL -H "Authorization: Bearer ${RENDER_API_KEY}" "${RENDER_API_URL}/services?limit=100")
          SERVICE_ID=$(echo "$SERVICES" | jq -r '.[] | select(.name==env.SERVICE_NAME) | .id' | head -n1)
          if [ -z "$SERVICE_ID" ]; then
            echo "Service ${SERVICE_NAME} not found on Render." >&2
            echo "$SERVICES" | jq -r '.[].name' || true
            exit 1
          fi
          echo "Triggering deploy for service ${SERVICE_NAME} (${SERVICE_ID})"
          curl -fsSL -X POST \
            -H "Authorization: Bearer ${RENDER_API_KEY}" \
            -H "Content-Type: application/json" \
            -d '{"clearCache":true}' \
            "${RENDER_API_URL}/services/${SERVICE_ID}/deploys"
